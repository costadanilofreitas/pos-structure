# -*- coding: utf-8 -*-
# Generate triggers for manual modification detection on fiscalinfo database
#
# Copyright (C) 2011 MWneo Corporation
#
# $Id$
# $Revision$
# $Date$
# $Author$

# Python standard modules
import sys
import sqlite3
from cStringIO import StringIO


def main():
    conn = sqlite3.connect(':memory:')
    with open('fiscalinfo.ddl', 'rb') as f:
        ddl = f.read()
    conn.executescript(ddl)
    print "DDL parsed with success"
    triggers = StringIO()
    cur = conn.cursor()
    cur.execute("SELECT tbl_name FROM sqlite_master WHERE type='table'")
    tables = set([val[0] for val in cur.fetchall()])
    tables = list(tables - set(["schema_version", "FiscalD", "FiscalDEnabled", "FiscalProductCatalogChangesCounter", ]))
    tables.sort()
    for table in tables:
        cur.execute("PRAGMA table_info(%s)" % table)
        fields = list([val[1] for val in cur.fetchall()])
        sql = []
        for field in fields:
            sql.append("		SELECT '%s' AS COL WHERE OLD.%s!=NEW.%s" % (field, field, field,))
        sql_fields = " UNION ALL\n".join(sql)
        triggers.write("""
-- %(table)s
CREATE TRIGGER %(table)s_FiscalD_AfterUpdate
AFTER UPDATE ON %(table)s FOR EACH ROW WHEN EXISTS (SELECT Enabled FROM FiscalDEnabled WHERE Enabled>0)
BEGIN
    INSERT OR REPLACE INTO FiscalD(TB,OP,R,C) SELECT '%(table)s' AS TB, 'M' AS OP, NEW._ROWID_ AS R, T.COL AS C
    FROM (
%(sql_fields)s
    ) T;
END;

CREATE TRIGGER %(table)s_FiscalD_AfterInsert
AFTER INSERT ON %(table)s FOR EACH ROW WHEN EXISTS (SELECT Enabled FROM FiscalDEnabled WHERE Enabled>0)
BEGIN INSERT OR REPLACE INTO FiscalD(TB,OP,R) VALUES('%(table)s','A',NEW._ROWID_); END;

CREATE TRIGGER %(table)s_FiscalD_AfterDelete
AFTER DELETE ON %(table)s FOR EACH ROW WHEN EXISTS (SELECT Enabled FROM FiscalDEnabled WHERE Enabled>0)
BEGIN INSERT OR REPLACE INTO FiscalD(TB,OP,R) VALUES('%(table)s','D',OLD._ROWID_); END;
""" % locals())
    triggers = triggers.getvalue()
    print "Tiggers generated!"
    # Modify the DDL file
    with open("fiscalinfo.ddl", "r") as source:
        data = source.readlines()
    state = 0
    out = StringIO()
    print "Embedding..."
    for line in data:
        if state == 0:
            out.write(line)
            if "-- BEGIN MANUAL MODIFICATION TRIGGERS (AUTO GENERATED BY gen_triggers.py)" in line:
                state = 1
                out.write(triggers)
                out.write("\n")
        elif state == 1:
            if "-- END MANUAL MODIFICATION TRIGGERS (AUTO GENERATED BY gen_triggers.py)" in line:
                state = 2
                out.write(line)
        else:
            out.write(line)
    if state != 2:
        print "ERROR - could not find BEGIN/END comments"
        sys.exit(1)
    with open("fiscalinfo.ddl", "w") as fout:
        fout.write(out.getvalue())
    print "SUCCESS!"

if __name__ == "__main__":
    main()
